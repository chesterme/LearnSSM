<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
<!--使用JNDI方式获取tomcat上配置的数据源-->
<!--    <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">-->
<!--        <property name="jndiName" value="java:comp/env/jdbc/ssm"/>-->
<!--    </bean>-->

    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/ssm?characterEncoding=utf-8&amp;serverTimezone=GMT%2B8"/>
        <property name="username" value="test"/>
        <property name="password" value="123456"/>
        <!-- 连接池最大数据库连接数 -->
        <property name="maxOpenPreparedStatements" value="255"/>
        <!-- 最大等待连接中的数量 -->
        <property name="maxIdle" value="5"/>
        <!-- 最大等待毫秒数 -->
        <property name="maxWaitMillis" value="10000"/>
    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 配置SalSessionFactoryBean -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 配置数据源 -->
        <property name="dataSource" ref="dataSource"/>
        <!-- 引入mybatis配置文件 -->
        <property name="configLocation" value="classpath:./ch12/config/mybatis-config.xml"/>
    </bean>

    <!-- 配置SalSessionTemplate -->
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg ref="sqlSessionFactory"/>
    </bean>

    <!-- 配置MapperFactoryBean -->
    <bean id="roleMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <!-- RoleMapper接口将被扫描为Mapper -->
        <property name="mapperInterface" value="ch12.mapper.RoleMapper"/>
        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
        <!-- 如果同时注入SqlSessionTemplate和SqlSessionFactory，则只会启动SqlSessionTemplate -->
<!--        <property name="sqlSessionTemplate" ref="sqlSessionTemplate"/>-->
    </bean>

    <!-- 配置MapperScannerConfigurer -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 指定扫描的基类 -->
        <property name="basePackage" value="ch12.mapper"/>
        <!-- 指定在Spring中定义Sql'SessionFactory的Bean名称-->
        <property name="sqlSessionFactoryBeanName" value="SqlSessionFactory"/>
        <!-- 使用sqlSessionTemplateBeanName将覆盖SqlSessionFactoryBeanName的配置 -->
<!--        <property name="sqlSessionTemplateBeanName" value="SqlSessionFactory"/>-->
        <!-- 指定标注，这样才能扫描成为Mapper -->
        <property name="annotationClass" value="org.springframework.stereotype.Repository"/>
    </bean>
</beans>